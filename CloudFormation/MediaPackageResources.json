{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates AWS Elemental MediaPackage ingest channels and origin endpoints.",
    "Resources": {
        "MediaPackageChannelResource": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "-",
                            [
                                "rodeolabz",
                                {
                                    "Ref": "AWS::Region"
                                }
                            ]
                        ]
                    },
                    "S3Key": "cloudformation/simpleliveworkflow_resources.zip"
                },
                "Environment": {},
                "Handler": "mediapackage_channel.event_handler",
                "MemorySize": 768,
                "Role": {
                    "Fn::GetAtt": [
                        "MediaPackageResourceRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.7",
                "Timeout": 300
            }
        },
        "MediaPackageResourceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AdministratorAccess"
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "MediaPackageChannel": {
            "Type": "AWS::CloudFormation::CustomResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "MediaPackageChannelResource",
                        "Arn"
                    ]
                },
                "StackName": {
                    "Ref": "AWS::StackName"
                }
            }
        },
        "MediaPackageLiveEndpointResource": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "-",
                            [
                                "rodeolabz",
                                {
                                    "Ref": "AWS::Region"
                                }
                            ]
                        ]
                    },
                    "S3Key": "cloudformation/simpleliveworkflow_resources.zip"
                },
                "Environment": {},
                "Handler": "mediapackage_live_endpoint.event_handler",
                "MemorySize": 768,
                "Role": {
                    "Fn::GetAtt": [
                        "MediaPackageResourceRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.7",
                "Timeout": 300
            }
        },
        "MediaPackageLiveEndpoint": {
            "Type": "AWS::CloudFormation::CustomResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "MediaPackageLiveEndpointResource",
                        "Arn"
                    ]
                },
                "ChannelId": {
                    "Ref": "MediaPackageChannel"
                },
                "StackName": {
                    "Ref": "AWS::StackName"
                }
            }
        },
        "MediaPackageDelayedEndpoint": {
            "Type": "AWS::CloudFormation::CustomResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "MediaPackageDelayedEndpointResource",
                        "Arn"
                    ]
                },
                "ChannelId": {
                    "Ref": "MediaPackageChannel"
                },
                "StackName": {
                    "Ref": "AWS::StackName"
                }
            }
        },
        "MediaPackageDelayedEndpointResource": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "-",
                            [
                                "rodeolabz",
                                {
                                    "Ref": "AWS::Region"
                                }
                            ]
                        ]
                    },
                    "S3Key": "cloudformation/simpleliveworkflow_resources.zip"
                },
                "Environment": {},
                "Handler": "mediapackage_delayed_endpoint.event_handler",
                "MemorySize": 768,
                "Role": {
                    "Fn::GetAtt": [
                        "MediaPackageResourceRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.7",
                "Timeout": 300
            }
        },
        "CloudFront": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "Comment": "CloudFront for MediaPackage",
                    "WebACLId": "",
                    "Origins": [
                        {
                            "OriginPath": "",
                            "CustomOriginConfig": {
                                "OriginProtocolPolicy": "https-only",
                                "OriginReadTimeout": 30,
                                "HTTPPort": 80,
                                "HTTPSPort": 443,
                                "OriginKeepaliveTimeout": 5
                            },
                            "Id": "MediaPackage",
                            "DomainName": {
                                "Fn::Select": [
                                    2,
                                    {
                                        "Fn::Split": [
                                            "/",
                                            {
                                                "Fn::GetAtt": [
                                                    "MediaPackageLiveEndpoint",
                                                    "OriginEndpointUrl"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    ],
                    "DefaultRootObject": "",
                    "PriceClass": "PriceClass_100",
                    "Enabled": true,
                    "DefaultCacheBehavior": {
                        "TargetOriginId": "MediaPackage",
                        "ViewerProtocolPolicy": "allow-all",
                        "ForwardedValues": {
                            "Cookies": {
                                "Forward": "none"
                            },
                            "QueryString": true
                        },
                        "MaxTTL": 31536000,
                        "SmoothStreaming": false,
                        "DefaultTTL": 86400,
                        "AllowedMethods": [
                            "HEAD",
                            "GET"
                        ],
                        "CachedMethods": [
                            "HEAD",
                            "GET"
                        ],
                        "MinTTL": 0,
                        "Compress": false
                    },
                    "ViewerCertificate": {
                        "CloudFrontDefaultCertificate": true
                    },
                    "HttpVersion": "http2"
                },
                "Tags": [
                    {
                       "Key": "mediapackage:cloudfront_assoc",
                       "Value": {
                        "Fn::GetAtt": [
                            "MediaPackageChannel",
                            "Arn"
                        ]}  
                    }
                ]
            }
        }
    },
    "Outputs": {
        "MediaPackageChannelID": {
            "Value": {
                "Ref": "MediaPackageChannel"
            },
            "Description": "ID for the channel WebDAV ingest"
        },
        "MediaPackagePrimaryInputUrl": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageChannel",
                    "PrimaryUrl"
                ]
            },
            "Description": "URL for the primary WebDAV ingest"
        },
        "MediaPackagePrimaryInputUsername": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageChannel",
                    "PrimaryUsername"
                ]
            },
            "Description": "Username for the primary WebDAV ingest"
        },
        "MediaPackagePrimaryInputPassword": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageChannel",
                    "PrimaryPassword"
                ]
            },
            "Description": "Password for the primary WebDAV ingest"
        },
        "MediaPackageSecondaryInputUrl": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageChannel",
                    "SecondaryUrl"
                ]
            },
            "Description": "URL for the secondary WebDAV ingest"
        },
        "MediaPackageSecondaryInputUsername": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageChannel",
                    "SecondaryUsername"
                ]
            },
            "Description": "Username for the secondary WebDAV ingest"
        },
        "MediaPackageSecondaryInputPassword": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageChannel",
                    "SecondaryPassword"
                ]
            },
            "Description": "Password for the secondary WebDAV ingest"
        },
        "MediaPackageLiveEndpointId": {
            "Value": {
                "Ref": "MediaPackageLiveEndpoint"
            },
            "Description": "ID for the channel live origin endpoint"
        },
        "MediaPackageDelayedEndpointId": {
            "Value": {
                "Ref": "MediaPackageDelayedEndpoint"
            },
            "Description": "ID for the channel delayed origin endpoint"
        },
        "MediaPackageChannelLiveEndpointUrl": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageLiveEndpoint",
                    "OriginEndpointUrl"
                ]
            },
            "Description": "URL for the channel live origin endpoint"
        },
        "MediaPackageChannelDelayedEndpointUrl": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageDelayedEndpoint",
                    "OriginEndpointUrl"
                ]
            },
            "Description": "URL for the channel delayed origin endpoint"
        },
        "MediaPackageChannelLiveEndpointCloudFrontUrl": {
            "Value": {
                "Fn::Join": [
                    "",
                    [ 
                        "https://",
                        { "Fn::GetAtt": ["CloudFront", "DomainName"]},
                        "/out",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        "out",
                                        {
                                            "Fn::GetAtt": [
                                                "MediaPackageLiveEndpoint",
                                                "OriginEndpointUrl"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                ]
            },
            "Description": "CloudFront URL for the channel live origin endpoint"
        },
        "MediaPackageChannelDelayedEndpointCloudFrontUrl": {
            "Value": {
                "Fn::Join": [
                    "",
                    [ 
                        "https://",
                        { "Fn::GetAtt": ["CloudFront", "DomainName"]},
                        "/out",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        "out",
                                        {
                                            "Fn::GetAtt": [
                                                "MediaPackageDelayedEndpoint",
                                                "OriginEndpointUrl"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                ]
            },
            "Description": "URL for the channel delayed origin endpoint"
        },
        "CloudFrontDistributionId": {
            "Value": {
                "Ref": "CloudFront"
            },
            "Description": "CloudFront Distribution ID created for MediaPackage"
        }
    }
}