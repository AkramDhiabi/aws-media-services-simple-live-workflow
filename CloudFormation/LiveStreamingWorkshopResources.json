{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates an end-to-end live and VOD streaming workflow. The AWS Elemental MediaLive channel will be started as the last step in stack creation.",
    "Resources": {
        "IAMModuleStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Fn::Join": [
                                    "-",
                                    [
                                        "https://rodeolabz",
                                        {
                                            "Ref": "AWS::Region"
                                        }
                                    ]
                                ]
                            },
                            ".s3.amazonaws.com/cloudformation/IAMResources.json"
                        ]
                    ]
                },
                "TimeoutInMinutes": 5
            }
        },
        "MediaPackageModuleStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Fn::Join": [
                                    "-",
                                    [
                                        "https://rodeolabz",
                                        {
                                            "Ref": "AWS::Region"
                                        }
                                    ]
                                ]
                            },
                            ".s3.amazonaws.com/cloudformation/MediaPackageResources.json"
                        ]
                    ]
                }
            },
            "DependsOn": "IAMModuleStack"
        },
        "MediaLiveModuleStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Fn::Join": [
                                    "-",
                                    [
                                        "https://rodeolabz",
                                        {
                                            "Ref": "AWS::Region"
                                        }
                                    ]
                                ]
                            },
                            ".s3.amazonaws.com/cloudformation/MediaLiveResources.json"
                        ]
                    ]
                },
                "TimeoutInMinutes": 5,
                "Parameters": {
                    "HLSPrimarySource": {
                        "Ref": "HLSPrimarySource"
                    },
                    "HLSSecondarySource": {
                        "Ref": "HLSPrimarySource"
                    },
                    "PackagerPrimaryChannelUrl": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.MediaPackagePrimaryInputUrl"
                        ]
                    },
                    "PackagerPrimaryChannelUsername": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.MediaPackagePrimaryInputUsername"
                        ]
                    },
                    "PackagerPrimaryChannelPassword": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.MediaPackagePrimaryInputPassword"
                        ]
                    },
                    "PackagerSecondaryChannelUrl": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.MediaPackageSecondaryInputUrl"
                        ]
                    },
                    "PackagerSecondaryChannelUsername": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.MediaPackageSecondaryInputUsername"
                        ]
                    },
                    "PackagerSecondaryChannelPassword": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.MediaPackageSecondaryInputPassword"
                        ]
                    },
                    "MediaLiveAccessRoleArn": {
                        "Fn::GetAtt": [
                            "IAMModuleStack",
                            "Outputs.MediaLiveAccessRoleArn"
                        ]
                    }
                }
            },
            "DependsOn": [
                "IAMModuleStack",
                "MediaPackageModuleStack"
            ]
        },
        "CloudWatchModuleStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Fn::Join": [
                                    "-",
                                    [
                                        "https://rodeolabz",
                                        {
                                            "Ref": "AWS::Region"
                                        }
                                    ]
                                ]
                            },
                            ".s3.amazonaws.com/cloudformation/CloudWatchResources.json"
                        ]
                    ]
                },
                "TimeoutInMinutes": 5,
                "Parameters": {
                    "DashboardName": {
                        "Fn::Join": [
                            "-",
                            [
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "CloudWatchIngestAndEgressDashboard"
                            ]
                        ]
                    },
                    "MediaPackageChannelId": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.MediaPackageChannelID"
                        ]
                    },
                    "MediaPackageEndpointId": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.MediaPackageLiveEndpointId"
                        ]
                    },
                    "MediaLiveChannelId": {
                        "Fn::GetAtt": [
                            "MediaLiveModuleStack",
                            "Outputs.MediaLiveChannelId"
                        ]
                    }
                }
            }
        },
        "MediaTailorModuleStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Condition" : "CreateMediaTailorConfiguration",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Fn::Join": [
                                    "-",
                                    [
                                        "https://rodeolabz",
                                        {
                                            "Ref": "AWS::Region"
                                        }
                                    ]
                                ]
                            },
                            ".s3.amazonaws.com/cloudformation/MediaTailorResources.json"
                        ]
                    ]
                },
                "Parameters": {
                    "CloudFrontDistributionId": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.CloudFrontDistributionId"
                        ]
                    },
                    "VideoSourceURL": {
                        "Fn::GetAtt": [
                            "MediaPackageModuleStack",
                            "Outputs.MediaPackageChannelLiveEndpointUrl"
                        ]
                    },
                    "ADS": "http://d2qohgpffhaffh.cloudfront.net/MediaTailor/VASTDemo.xml"
                }
            }
        }
    },
    "Conditions": {
        "CreateMediaTailorConfiguration": {
            "Fn::Equals": [
                {
                    "Ref": "CreateMediaTailor"
                },
                "True"
            ]
        }
    },
    "Parameters": {
        "HLSPrimarySource": {
            "Default": "http://d2qohgpffhaffh.cloudfront.net/HLS/vanlife/withad/sdr_uncage_vanlife_admarker_60sec.m3u8",
            "Description": "URL of the primary HLS pull source",
            "Type": "String"
        },
        "HLSSecondarySource": {
            "Default": "http://d2qohgpffhaffh.cloudfront.net/HLS/vanlife/withad/sdr_uncage_vanlife_admarker_60sec.m3u8",
            "Description": "URL of the secondary HLS pull source",
            "Type": "String"
        },
        "CreateMediaTailor": {
            "Description": "If True, a new MediaTailor configuration is created based on MediaPackage origin and its CloudFront distribution.",
            "Type": "String",
            "Default": "False",
            "AllowedValues": [
                "True",
                "False"
            ]
        }
    },
    "Outputs": {
        "MediaPackageChannelLiveEndpointUrl": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageModuleStack",
                    "Outputs.MediaPackageChannelLiveEndpointUrl"
                ]
            },
            "Description": "URL for the channel live origin endpoint"
        },
        "MediaPackageChannelDelayedEndpointUrl": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageModuleStack",
                    "Outputs.MediaPackageChannelDelayedEndpointUrl"
                ]
            },
            "Description": "URL for the channel delayed origin endpoint"
        },
        "MediaPackageChannelLiveEndpointCloudFrontUrl": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageModuleStack",
                    "Outputs.MediaPackageChannelLiveEndpointCloudFrontUrl"
                ]
            },
            "Description": "CloudFront URL for the channel live origin endpoint"
        },
        "MediaPackageChannelDelayedEndpointCloudFrontUrl": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaPackageModuleStack",
                    "Outputs.MediaPackageChannelDelayedEndpointCloudFrontUrl"
                ]
            },
            "Description": "CloudFront URL for the channel delayed origin endpoint"
        },
        "MediaTailorCloudFrontHLSPlaybackURL": {
            "Value": {
                "Fn::GetAtt": [
                    "MediaTailorModuleStack",
                    "Outputs.CloudFrontPlaybackURL"
                ]
            },
            "Description": "The URL with CloudFront for initiating a server-side MediaTailor HLS playback session. CloudFront must be fully deployed to use.",
            "Condition" : "CreateMediaTailorConfiguration"
        },
        "CloudWatchDashboard": {
            "Value": {
                "Fn::GetAtt": [
                    "CloudWatchModuleStack",
                    "Outputs.CloudWatchDashboard"
                ]
            },
            "Description": "Dashboard created to monitor a MediaLive ingest channel and MediaPackage origin endpoint"
        }
    }
}